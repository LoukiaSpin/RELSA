plot(set$day, set$bur2h, type="b", pch=19, xlab="time")
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4), mypch=19, myXlab="day")
dev.off()
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4), mypch=19, myXlab="day")
op <- par(mfrow=c(3,1),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
plot(set$day, set$bwc,   type="b", pch=19, xaxt="n")
plot(set$day, set$temp,  type="b", pch=19, xaxt="n")
plot(set$day, set$bur2h, type="b", pch=19, xlab="time")
op <- par(mfrow=c(3,1),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
plot(set$day, set$bwc,   type="b", pch=19, xaxt="n", lwd=2)
plot(set$day, set$temp,  type="b", pch=19, xaxt="n")
plot(set$day, set$bur2h, type="b", pch=19, xlab="time")
op <- par(mfrow=c(3,1),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
plot(set$day, set$bwc,   type="b", pch=19, xaxt="n", lwd=2)
plot(set$day, set$temp,  type="b", pch=19, xaxt="n", lwd=2)
plot(set$day, set$bur2h, type="b", pch=19, xlab="time", lwd=2)
set
op <- par(mfrow=c(3,1),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
plot(set$day, set$bwc,   type="b", pch=19, xaxt="n", lwd=2)
plot(set$day, set$temp,  type="b", pch=19, xaxt="n", lwd=2)
plot(set$day, set$bur2h, type="b", pch=19, xlab="time", lwd=2)
install.packages("purrr")
set
# Set params for filmulation ----------------------------------------------
x            <- 1:40
#number of frames or plots
rename   <- function(x){
if (x < 10) {
return(name <- paste('000',i,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',i,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', i,'plot.png', sep=''))
}
}
length(x)
revRange  <- rev(range)
frameIdx  <- which.min(abs(set-revRange[i] ))
# Set params for filmulation ----------------------------------------------
x            <- 1:40
range        <- x
#number of frames or plots
rename   <- function(x){
if (x < 10) {
return(name <- paste('000',i,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',i,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', i,'plot.png', sep=''))
}
}
frames      <-length(x)
revRange  <- rev(range)
revRange
which.min(abs(set-revRange[i] ))
set$day[1:i]
set$bwc[1:i]
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
plot(x1, y1,   type="b", pch=19, xaxt="n", lwd=2)
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
plot(x1, y1, type="b", pch=19, xaxt="n", lwd=2)
plot(x1, y2, type="b", pch=19, xaxt="n", lwd=2)
plot(x1, y3, type="b", pch=19, xlab="time", lwd=2)
frames      <-length(x)
for(i in 1:frames){
name <- rename(i)
png(name)
op   <- par(mfrow=c(3,1),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
revRange  <- rev(range)
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
plot(x1, y1, type="b", pch=19, xaxt="n", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
plot(x1, y2, type="b", pch=19, xaxt="n", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
plot(x1, y3, type="b", pch=19, xlab="time", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
dev.off()
}
getwd()
# Load simulated data -----------------------------------------------------
set          <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/RELSA_simdat.txt" )
RELSA        <- relsa(set=set, bsl, a=1, drop=NULL, turnvars="temp", relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
# Set params for filmulation ----------------------------------------------
x            <- 1:40
range        <- x
#number of frames or plots
rename   <- function(x){
if (x < 10) {
return(name <- paste('000',i,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',i,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', i,'plot.png', sep=''))
}
}
frames      <-length(x)
for(i in 1:frames){
name <- rename(i)
png(name)
revRange  <- rev(range)
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
op   <- par(mfrow=c(3,1),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
plot(x1, y1, type="b", pch=19, xaxt="n", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
plot(x1, y2, type="b", pch=19, xaxt="n", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
plot(x1, y3, type="b", pch=19, xlab="time", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
dev.off()
}
getwd()
library(RELSA)
library(magick)
library(purrr)
setwd("C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation")
raw          <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt", treatment = "Transmitter" )
vars         <- c("bwc", "bur2h","burON","hr","hrv", "temp", "act", "mgs")
turnvars     <- c("hr", "mgs", "temp" )
org          <- cbind(raw[,1:4], raw[,vars])
pre          <- relsa_norm(org,   normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
bsl          <- relsa_baselines(dataset=pre, bslday=-1, variables=vars, turnvars=turnvars)
levels       <- relsa_levels(pre, mypath="C:/MHH Bleich/Papers/PostOPPaper/Relsa package/paper figures/Clusters/", bsl,
filename="Burrowing levels", drops=c("bw","score"), turns=c("hr","mgs","temp"), relsaNA=NA, k=4,
showScree="no", customCol= c("red","green","blue","magenta"), seed=123, myYlim=c(0,1.4),
saveTiff="yes")
# Load simulated data -----------------------------------------------------
set          <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/RELSA_simdat.txt" )
RELSA        <- relsa(set=set, bsl, a=1, drop=NULL, turnvars="temp", relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
# Set params for filmulation ----------------------------------------------
x            <- 1:40
range        <- x
#number of frames or plots
rename   <- function(x){
if (x < 10) {
return(name <- paste('000',i,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',i,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', i,'plot.png', sep=''))
}
}
frames      <-length(x)
for(i in 1:frames){
name <- rename(i)
png(name)
revRange  <- rev(range)
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
op   <- par(mfrow=c(3,1),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
plot(x1, y1, type="b", pch=19, xaxt="n", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
plot(x1, y2, type="b", pch=19, xaxt="n", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
plot(x1, y3, type="b", pch=19, xlab="time", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
dev.off()
}
revRange
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4), mypch=19, myXlab="day")
dev.off()
i=20
plot(x1, y1, type="b", pch=19, xaxt="n", lwd=2)
abline(v=revRange[i], col="red", lwd=2)
revRange
plot(x1, y1, type="b", pch=19, xaxt="n", lwd=2)
abline(v=range[i], col="red", lwd=2)
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
revRange  <- rev(range)
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
op        <- par(mfrow = c(3,1),
oma   = c(5,4,0,0) + 0.1,
mar   = c(0,0,1,1) + 0.1)
plot(x1, y1, type="b", pch=19, xaxt="n", lwd=2)
abline(v=range[i], col="red", lwd=2)
plot(x1, y2, type="b", pch=19, xaxt="n", lwd=2)
abline(v=range[i], col="red", lwd=2)
plot(x1, y3, type="b", pch=19, xlab="time", lwd=2)
abline(v=range[i], col="red", lwd=2)
dev.off()
}
y2
y3
range
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
revRange  <- rev(range)
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
op        <- par(mfrow = c(3,1),
oma   = c(5,4,0,0) + 0.1,
mar   = c(0,0,1,1) + 0.1)
plot(x1, y1, type="b", pch=19, xaxt="n", lwd=2, xlim=c(1,41), ylim=c(80,103))
abline(v=range[i], col="red", lwd=2)
plot(x1, y2, type="b", pch=19, xaxt="n", lwd=2, xlim=c(1,41), ylim=c(95,105))
abline(v=range[i], col="red", lwd=2)
plot(x1, y3, type="b", pch=19, xlab="time", lwd=2, xlim=c(1,41), ylim=c(0,105))
abline(v=range[i], col="red", lwd=2)
dev.off()
}
list.files(path = "C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation/", pattern = "*.png", full.names = T) %>%
map(image_read)       %>% # reads each path file
image_join()          %>% # joins image
image_animate(fps=10) %>% # animates, can opt for number of loops
image_write("test.gif")
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
revRange  <- rev(range)
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
op        <- par(mfrow = c(3,1),
oma   = c(5,4,0,0) + 0.1,
mar   = c(0,0,1,1) + 0.1)
plot(x1, y1, type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(80,110), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
plot(x1, y2, type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(98,110), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
plot(x1, y3, type="b", pch=19, xlab="time", lwd=2, xlim=c(1,41), ylim=c(0,110), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
dev.off()
}
# Create the animation
list.files(path = "C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation/", pattern = "*.png", full.names = T) %>%
map(image_read)       %>% # reads each path file
image_join()          %>% # joins image
image_animate(fps=10) %>% # animates, can opt for number of loops
image_write("test.gif")
# Create the animation
list.files(path = "C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation/", pattern = "*.png", full.names = T) %>%
map(image_read)       %>% # reads each path file
image_join()          %>% # joins image
image_animate(fps=5) %>% # animates, can opt for number of loops
image_write("test.gif")
set
plotset       <- relsa_plot(set, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4), mypch=19, myXlab="day")
set
set[1:i,]
fracset   <- set[1:i,]
plotset       <- relsa_plot(fracset, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4), mypch=19, myXlab="day")
plotset
i
i=3
fracset   <- set[1:i,]
plotset       <- relsa_plot(fracset, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4), mypch=19, myXlab="day")
plotset
fracset
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
revRange  <- rev(range)
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
fracset   <- set[1:i,]
plotset       <- relsa_plot(fracset, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4), mypch=19, myXlab="day")
dev.off()
}
fracset
i=10
set[1:i,]
fracset   <- set[1:i,]
fracset
RELSA
RELSA
RELSA[1:i,]
fracRELSA <- RELSA
fracRELSA
fracset   <- set[1:i,]
fracRELSA <- RELSA
fracRELSA$delta <- RELSA$delta[1:i,]
fracRELSA$relsa <- RELSA$relsa[1:i,]
fracRELSA
fracset   <- set[1:i,]
fracRELSA <- RELSA
fracRELSA$delta <- RELSA$delta[1:i,]
fracRELSA$relsa <- RELSA$relsa[1:i,]
plotset       <- relsa_plot(fracset, fracRELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4), mypch=19, myXlab="day")
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
fracset   <- set[1:i,]
fracRELSA <- RELSA
fracRELSA$delta <- RELSA$delta[1:i,]
fracRELSA$relsa <- RELSA$relsa[1:i,]
plotset       <- relsa_plot(fracset, fracRELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4), mypch=19, myXlab="day")
dev.off()
}
x1
plot(x1, fracRELSA, type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
x1
fracRELSA
plot(fracRELSA$relsa$days, fracRELSA, type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
plot(fracRELSA$relsa$days, fracRELSA$relsa$rms, type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
i=10
fracset   <- set[1:i,]
fracRELSA <- RELSA
fracRELSA$delta <- RELSA$delta[1:i,]
fracRELSA$relsa <- RELSA$relsa[1:i,]
plot(fracRELSA$relsa$days, fracRELSA$relsa$rms, type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
fracRELSA$relsa$days
fracRELSA$relsa$rms
plot(fracRELSA$relsa$days, fracRELSA$relsa$rms)
length(fracRELSA$relsa$days)
length(fracRELSA$relsa$rms)
plot(fracRELSA$relsa$days, as.numeric(fracRELSA$relsa$rms), type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
plot(fracRELSA$relsa$days, as.numeric(unlist(fracRELSA$relsa$rms)), type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
# RELSA assessment --------------------------------------------------------
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
fracset   <- set[1:i,]
fracRELSA <- RELSA
fracRELSA$delta <- RELSA$delta[1:i,]
fracRELSA$relsa <- RELSA$relsa[1:i,]
plot(fracRELSA$relsa$days, as.numeric(unlist(fracRELSA$relsa$rms)), type="b", pch=19, xaxt="n",
lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2, col="red")
abline(v=range[i], col="blue", lwd=2)
dev.off()
}
list.files(path = "C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation/", pattern = "*.png", full.names = T) %>%
map(image_read)       %>% # reads each path file
image_join()          %>% # joins image
image_animate(fps=5) %>% # animates, can opt for number of loops
image_write("RELSA.gif")
levels
plot(fracRELSA$relsa$days, as.numeric(unlist(fracRELSA$relsa$rms)), type="b", pch=19, xaxt="n",
lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2, col="red", ylab="RELSA score", xlab="Day")
abline(v=range[i], col="blue", lwd=2)
abline(h=levels$level1, lty=2)
# RELSA assessment --------------------------------------------------------
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
fracset   <- set[1:i,]
fracRELSA <- RELSA
fracRELSA$delta <- RELSA$delta[1:i,]
fracRELSA$relsa <- RELSA$relsa[1:i,]
plot(fracRELSA$relsa$days, as.numeric(unlist(fracRELSA$relsa$rms)), type="b", pch=19, xaxt="n",
lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2, col="red", ylab="RELSA score", xlab="Day")
abline(v=range[i], col="black", lwd=2)
abline(h=levels$level1, lty=2)
abline(h=levels$level2, lty=2)
abline(h=levels$level2, lty=2)
abline(h=levels$level3, lty=2)
dev.off()
}
# Create the animation
list.files(path = "C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation/", pattern = "*.png", full.names = T) %>%
map(image_read)       %>% # reads each path file
image_join()          %>% # joins image
image_animate(fps=5) %>% # animates, can opt for number of loops
image_write("RELSA.gif")
source('C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation/RELSA_filmulation.R', echo=TRUE)
source('C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation/RELSA_filmulation.R', echo=TRUE)
# Load simulated data -----------------------------------------------------
set          <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/RELSA_simdat.txt" )
RELSA        <- relsa(set=set, bsl, a=1, drop=NULL, turnvars="temp", relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
# Set params for filmulation ----------------------------------------------
x            <- 1:40
range        <- x
#number of frames or plots
rename   <- function(x){
if (x < 10) {
return(name <- paste('000',i,'plot.png',sep=''))
}
if (x < 100 && i >= 10) {
return(name <- paste('00',i,'plot.png', sep=''))
}
if (x >= 100) {
return(name <- paste('0', i,'plot.png', sep=''))
}
}
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
revRange  <- rev(range)
x1        <- set$day[1:i]
y1        <- set$bwc[1:i]
y2        <- set$temp[1:i]
y3        <- set$bur2h[1:i]
op        <- par(mfrow = c(3,1),
oma   = c(5,4,0,0) + 0.1,
mar   = c(0,0,1,1) + 0.1)
plot(x1, y1, type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(80,110), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
plot(x1, y2, type="b", pch=19, xaxt="n",    lwd=2, xlim=c(1,41), ylim=c(98,110), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
plot(x1, y3, type="b", pch=19, xlab="time", lwd=2, xlim=c(1,41), ylim=c(0,110), cex.axis=1.2)
abline(v=range[i], col="red", lwd=2)
dev.off()
}
# Create the animation
list.files(path = "C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation/", pattern = "*.png", full.names = T) %>%
map(image_read)       %>% # reads each path file
image_join()          %>% # joins image
image_animate(fps=5) %>% # animates, can opt for number of loops
image_write("simuData.gif")
# RELSA assessment --------------------------------------------------------
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
fracset   <- set[1:i,]
fracRELSA <- RELSA
fracRELSA$delta <- RELSA$delta[1:i,]
fracRELSA$relsa <- RELSA$relsa[1:i,]
plot(fracRELSA$relsa$days, as.numeric(unlist(fracRELSA$relsa$rms)), type="b", pch=19, xaxt="n",
lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2, col="red", ylab="RELSA score", xlab="Day")
abline(v=range[i], col="black", lwd=2)
abline(h=levels$level1, lty=2)
abline(h=levels$level2, lty=2)
abline(h=levels$level3, lty=2)
abline(h=levels$level4, lty=2)
dev.off()
}
# RELSA assessment --------------------------------------------------------
frames      <-length(x)
for(i in 1:frames){
name      <- rename(i)
png(name)
fracset   <- set[1:i,]
fracRELSA <- RELSA
fracRELSA$delta <- RELSA$delta[1:i,]
fracRELSA$relsa <- RELSA$relsa[1:i,]
plot(fracRELSA$relsa$days, as.numeric(unlist(fracRELSA$relsa$rms)), type="b", pch=19,
lwd=2, xlim=c(1,41), ylim=c(0,1.2), cex.axis=1.2, col="red", ylab="RELSA score", xlab="Day")
abline(v=range[i], col="black", lwd=2)
abline(h=levels$level1, lty=2)
abline(h=levels$level2, lty=2)
abline(h=levels$level3, lty=2)
abline(h=levels$level4, lty=2)
dev.off()
}
# Create the animation
list.files(path = "C:/MHH Bleich/Papers/PostOPPaper/RELSA filmulation/", pattern = "*.png", full.names = T) %>%
map(image_read)       %>% # reads each path file
image_join()          %>% # joins image
image_animate(fps=5) %>% # animates, can opt for number of loops
image_write("RELSA.gif")
