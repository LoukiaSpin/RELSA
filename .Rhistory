if( length(turnvars[turnvars %in% names(subdata)])==0 ){
turnvars <- NULL
}else{}
if( is.null(drop)==TRUE ){
}else{
subdata[names(subdata) %in% drop] <- NULL
turnvars                          <- turnvars[!(turnvars %in% drop)] # kick out dropped variables (for permutation!)
}
### calculate difference matrix for the animal & turn vor positive variables
if( is.null(turnvars)==TRUE ){
delta            <- 100 - subdata[-1]
bsdelta          <- 100 - bsl$maxsev
}else{
delta            <- 100 - subdata[-1]
delta[,turnvars] <- delta[, turnvars]* -1
bsdelta          <- 100 - bsl$maxsev         # for the extreme values of baseline vars
bsdelta[turnvars]<- bsdelta[turnvars]* -1
}
### set all negative values to NA - otherwise zero would allow usage in the mean!
delta[delta<0]     <- 0
delta              <- round(delta,2)
head(delta)
# get the order of names in delta for baseline relsa score 2
namen              <- names(delta)
delta$days <-NULL
wfactor    <- NULL
for(r in 1:dim(delta)[1]){
wfactor          <- as.data.frame(round( rbind(wfactor, delta[r,] / bsdelta[namen]), 2))
}
head(wfactor)
wf_sum             <- round(apply(wfactor, 1, sum, na.rm=T),2 ) # Summarize
wf                 <- wf_sum  / (dim(wfactor)[2] - apply(apply(wfactor,2, is.na),1,sum))
if(length(wf)>0){
wf[is.nan(wf)] <- relsaNA
}else{}
# if weights are smaller 0, kill them!
wf[wf <0]        <- relsaNA
# get NA positions for rms correction
na.idx           <- is.na(wf)
####### RELSA: score 2: METHOD 2 (RMS)
# RMS RELSA
rms     <- c()
for(l in 1:dim(delta)[1]){
RMS                <- sqrt( sum( wfactor[l, ]^2 ,na.rm=TRUE )/ (length(wfactor[l, ]) - sum(is.na(wfactor[l, ])))  )
if( sum(is.na(wfactor[l, ]))==length(names(wfactor)) ){ RMS<-NA} else {}
rms[l]             <- RMS
}
rms[na.idx]          <- NA
rms                  <- as.data.frame(rms)
final                <- data.frame(day=days, RELSA=round(rms,2))
colnames(final)      <- c("day", "RELSA")
head(final)
relsascore2
animal       <- 16
RELSA2       <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore2  <- RELSA2$relsa$rms
relsascore2
testset
bsl
relsa(set=testset, bsl, a=16, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsa(set=testset, bsl, a=1, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
##### Laura Model Single Tests #########################################
testraw      <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
animal       <- 16
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
testset[testset$id==unique(testset$id)[animal],]
# show raw data + RELSA
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4))
testraw      <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
animal       <- 1
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
testset[testset$id==unique(testset$id)[animal],]
# show raw data + RELSA
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4))
postop
unique(postop$id)
testraw[testraw$id==unique(testraw$id)[16],]
animal       <- 16
RELSA2       <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ),
turnvars=NULL, relsaNA=NA)
relsascore2  <- RELSA2$relsa$rms
relsascore2
relsascore2
plot(c(-1:28), relsascore2, type="b", pch=19 )
length(relsascore2)
relsascore2
class(relsascore2)
unlist(relsascore2)
as.numeric(unlist(RELSA2$relsa$rms))
relsascore2
as.numeric(unlist(RELSA2$relsa$rms))
relsascore2  <- as.numeric(unlist(RELSA2$relsa$rms))
relsascore2
length(relsascore2)
testraw      <- postop
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
animal       <- 1
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
animal       <- 16
RELSA2       <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
relsascore2  <- as.numeric(unlist(RELSA2$relsa$rms))
relsascore
relsascore2
relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
RELSA2$relsa$rms
testset
bsl
animal
RELSA2$relsa
testset
unique(testset$id)
animal       <- 1
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
relsascore
relsa(set=testset, bsl, a=16, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
RELSA2       <- relsa(set=testset, bsl, a=16, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
head(RELSA2$relsa)
RELSA2       <- relsa(set=testset, bsl, a=2, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
#relsascore2  <- as.numeric(unlist(RELSA2$relsa$rms))
head(RELSA2$relsa)
RELSA2       <- relsa(set=testset, bsl, a=3, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
#relsascore2  <- as.numeric(unlist(RELSA2$relsa$rms))
head(RELSA2$relsa)
RELSA2       <- relsa(set=testset, bsl, a=4, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
#relsascore2  <- as.numeric(unlist(RELSA2$relsa$rms))
head(RELSA2$relsa)
RELSA2       <- relsa(set=testset, bsl, a=13, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
#relsascore2  <- as.numeric(unlist(RELSA2$relsa$rms))
head(RELSA2$relsa)
RELSA2       <- relsa(set=testset, bsl, a=14, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
#relsascore2  <- as.numeric(unlist(RELSA2$relsa$rms))
head(RELSA2$relsa)
RELSA2       <- relsa(set=testset, bsl, a=28, drop=c("bw","score","mgs30","mgs180" ), turnvars=NULL, relsaNA=NA)
#relsascore2  <- as.numeric(unlist(RELSA2$relsa$rms))
head(RELSA2$relsa)
a=28
set=testset
### Build a data subset defined by the chosen animal
whichanimal  <- unique(set$id )
subdata      <- set[set$id == whichanimal[a], 4:dim(set)[2]]
days         <- subdata$day
subdata
set
dim(set)
unique(set$id)
length(unique(set$id))
##### Laura Model Single Tests #########################################
testraw      <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
animal       <- 8
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
testset[testset$id==unique(testset$id)[animal],]
# show raw data + RELSA
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4))
##### Laura Model Single Tests #########################################
testraw      <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
animal       <- 9
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
testset[testset$id==unique(testset$id)[animal],]
# show raw data + RELSA
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4))
##### Laura Model Single Tests #########################################
testraw      <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
animal       <- 10
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
testset[testset$id==unique(testset$id)[animal],]
# show raw data + RELSA
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4))
##### Laura Model Single Tests #########################################
testraw      <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
animal       <- 11
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
testset[testset$id==unique(testset$id)[animal],]
# show raw data + RELSA
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4))
testraw      <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
animal       <- 12
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
testset[testset$id==unique(testset$id)[animal],]
# show raw data + RELSA
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4))
testraw      <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
animal       <- 13
RELSA        <- relsa(set=testset, bsl, a=animal, drop=c("bw","score","mgs30","mgs180" ), turnvars=c("hr", "mgs","temp" ), relsaNA=NA)
relsascore   <- as.numeric(unlist(RELSA$relsa$rms))
testset[testset$id==unique(testset$id)[animal],]
# show raw data + RELSA
plotset       <- relsa_plot(pre_test, RELSA, levels=levels, animal=animal, plotvar=NULL,
plotRELSA=TRUE, myylim=c(80,120), myYlim=c(0,1.4))
raw          <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt")
save(mydata, file="data/postop.rda")
save(raw, file="data/postop.rda")
devtools::use_data(raw, postop)
use_data(raw, postop)
use_data(raw, postop, overwrite = TRUE)
library(RELSA)
library(RELSA)
postop
dim(postop)
raw
dim(raw)
library(usethis)
postop          <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
use_data(postop)
library(RELSA)
dim(postop)
library(RELSA)
library(RELSA)
library(RELSA)
?complete.cases
?dev.off
library(RELSA)
devtools::use_build_ignore(c("docs"))
library(RELSA)
library(RELSA)
library(RELSA)
library(RELSA)
#source("C:/MHH Bleich/Papers/PostOPPaper/Relsa package/Paper_Clustering.R")
source("C:/MHH Bleich/Papers/PostOPPaper/Relsa package/paper figures/Paper R Scripts/daily_fractions.R")
############ BSL & General ##################
raw          <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt", treatment = "Transmitter" )
vars         <- c("bwc", "bur2h","burON","hr","hrv", "temp", "act", "mgs")
turnvars     <- c("hr", "mgs", "temp" )
org          <- cbind(raw[,1:4], raw[,vars])
pre          <- relsa_norm(org,   normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
bsl          <- relsa_baselines(dataset=pre, bslday=-1, variables=vars, turnvars=turnvars)
levels       <- relsa_levels(pre, mypath="C:/MHH Bleich/Papers/PostOPPaper/Relsa package/paper figures/Clusters/", bsl,
filename="Burrowing levels", drops=c("bw","score"), turns=c("hr","mgs","temp"), relsaNA=NA, k=4,
showScree="no", customCol= c("red","green","blue","magenta"), seed=123, myYlim=c(0,1.4),
saveTiff="yes")
##### Severity Profiles #########################################
### ALL in
testraw      <- relsa_load("C:/MHH Bleich/Papers/PostOPPaper/Data/post-op laura.txt" )
vars         <- names(testraw[,-c(1:4)])
pre_test     <- cbind(testraw[,1:4], testraw[,vars])
testset      <- relsa_norm(pre_test, normthese=c("bur2h","burON","hr","hrv", "temp", "act", "mgs" ), ontime=1)
df      <-NULL
profile <- c()
for(i in 1:length(unique(testset$id))){
animal       <- i
R            <- relsa(testset, bsl, a=animal,  drop=c("bw","score"), turnvars=c("hr", "mgs","temp"), relsaNA=NA)$relsa
R$treatment  <- pre_test[pre_test$id==unique(pre_test$id)[animal],"treatment"]
R$condition  <- pre_test[pre_test$id==unique(pre_test$id)[animal],"condition"]
profile[i]   <- max(R$rms, na.rm=TRUE)
df           <- rbind(df, data.frame(id=unique(pre_test$id)[animal], day=R$day,
treatment=R$treatment, condition=R$condition, rms=R$rms))
}
mean(df[df$treatment=="Transmitter",]$rms)
mean(df[df$treatment=="Sham",]$rms, na.rm=TRUE)
### Some general markers for the plots
mycolors   <- rep(NA, dim(df)[1])
mycolors[(df$condition =="Metamizol") & (df$treatment =="Transmitter")] <- rgb(118/255, 6/255, 154/255 )
mycolors[(df$condition =="Metamizol") & (df$treatment =="Sham")]        <- rgb(222/255, 139/255, 249/255 )
mycolors[(df$condition =="Carprofen") & (df$treatment =="Transmitter")] <- "black"
mycolors[(df$condition =="Carprofen") & (df$treatment =="Sham")]        <- rgb(160/255, 160/255, 164/255)
mypch      <- rep(NA, dim(df)[1])
mypch[(df$condition =="Metamizol") & (df$treatment =="Transmitter")] <- 18
mypch[(df$condition =="Metamizol") & (df$treatment =="Sham")]        <- 5
mypch[(df$condition =="Carprofen") & (df$treatment =="Transmitter")] <- 25
mypch[(df$condition =="Carprofen") & (df$treatment =="Sham")]        <- 6
plot(rep(1,length(df[df$id==unique(df$id)[1], "rms"])), df[df$id==unique(df$id)[1], "rms"],
xlim=c(0, length(unique(df$id))), ylim=c(0,1.4),
col= unique(mycolors[ df$id==unique(df$id)[1]]),
pch= unique(mypch[ df$id==unique(df$id)[1]])   , ylab="RELSA score", xlab="Animal index",
bg = "black", cex=1)
for(i in 2:length(unique(df$id))){
points( rep(i,length(df[df$id==unique(df$id)[i], "rms"])), df[df$id==unique(df$id)[i], "rms"],
col= unique(mycolors[ df$id==unique(df$id)[i]]),
pch= unique(mypch[ df$id==unique(df$id)[i]]),
bg = "black", cex=ifelse(unique(mypch[ df$id==unique(df$id)[i]])==18,1.7,1))
}
abline(h=levels$level1, lwd=2, lty=2)
abline(h=levels$level2, lwd=2, lty=2)
abline(h=levels$level3, lwd=2, lty=2)
abline(h=levels$level4, lwd=2, lty=2)
text(100,levels$level1+0.1, levels$level1 )
text(100,levels$level2+0.1, levels$level2 )
text(100,levels$level3+0.1, levels$level3 )
text(100,levels$level4+0.1, levels$level4 )
abline(v=13.5, lwd=1, lty=3)
# lines(1:length(unique(testset$id)), profile, col="black", lwd=2)
legend("topleft",c("TM+Carp","TM+Meta"),
pch=c(25,18), col=c("black", rgb(118/255, 6/255, 154/255)), bty="n", pt.bg = c("black",NA), pt.cex =c(0.9,1.5) )
legend("topright",c("Sham+Carp","Sham+Meta"),
pch=c(6,5), col=c(rgb(160/255, 160/255, 164/255),rgb(222/255, 139/255, 249/255)), bty="n", cex=0.9)
title("Post-OP All")
library(RELSA)
postop
raw          <- postop
vars         <- c("bwc", "bur2h","burON","hr","hrv", "temp", "act", "mgs")
turnvars     <- c("hr", "mgs", "temp" )
pre          <- relsa_norm(cbind(raw[,1:4], raw[,vars]),
normthese=c("bur2h","burON","hr","hrv","temp","act","mgs"), ontime=1)
bsl          <- relsa_baselines(dataset=pre, bslday=-1, variables=vars, turnvars=turnvars)
bsl
library(RELSA)
library(RELSA)
raw          <- postop
vars         <- c("bwc", "bur2h","burON","hr","hrv", "temp", "act", "mgs")
turnvars     <- c("hr", "mgs", "temp" )
pre          <- relsa_norm(cbind(raw[,1:4], raw[,vars]),
normthese=c("bur2h","burON","hr","hrv","temp","act","mgs"), ontime=1)
bsl          <- relsa_baselines(dataset=pre, bslday=-1, variables=vars, turnvars=turnvars)
levels       <- relsa_levels(pre, drops=c("bw","score"), turns=c("hr","mgs","temp"),
k=4, customCol= c("red","green","blue","magenta"))
library(RELSA)
raw          <- postop
vars         <- c("bwc", "bur2h","burON","hr","hrv", "temp", "act", "mgs")
turnvars     <- c("hr", "mgs", "temp" )
pre          <- relsa_norm(cbind(raw[,1:4], raw[,vars]),
normthese=c("bur2h","burON","hr","hrv","temp","act","mgs"), ontime=1)
bsl          <- relsa_baselines(dataset=pre, bslday=-1, variables=vars, turnvars=turnvars)
relsa_levels(pre, drops=c("bw","score"), turns=c("hr","mgs","temp"),
k=4, customCol= c("red","green","blue","magenta"))
levels       <- relsa_levels(pre, bsl=bsl, drops=c("bw","score"), turns=c("hr","mgs","temp"),
k=4, customCol= c("red","green","blue","magenta"))
library(RELSA)
library(RELSA)
raw          <- postop
vars         <- c("bwc", "bur2h","burON","hr","hrv", "temp", "act", "mgs")
turnvars     <- c("hr", "mgs", "temp" )
pre          <- relsa_norm(cbind(raw[,1:4], raw[,vars]),
normthese=c("bur2h","burON","hr","hrv","temp","act","mgs"), ontime=1)
bsl          <- relsa_baselines(dataset=pre, bslday=-1, variables=vars, turnvars=turnvars)
levels       <- relsa_levels(pre, bsl=bsl, drops=c("bw","score"), turns=c("hr","mgs","temp"),
k=4, customCol= c("red","green","blue","magenta"))
levels
library(RELSA)
animal       <- 1
RELSA        <- relsa(set=pre, bsl, a=animal, drop=c("bw","score","mgs30","mgs180"),
turnvars=c("hr","mgs","temp"), relsaNA=NA)
library(RELSA)
# Build modell ------------------------------------------------------------
raw          <- postop
vars         <- c("bwc", "bur2h","burON","hr","hrv", "temp", "act", "mgs")
turnvars     <- c("hr", "mgs", "temp" )
pre          <- relsa_norm(cbind(raw[,1:4], raw[,vars]),
normthese=c("bur2h","burON","hr","hrv","temp","act","mgs"), ontime=1)
bsl          <- relsa_baselines(dataset=pre, bslday=-1, variables=vars, turnvars=turnvars)
levels       <- relsa_levels(pre, bsl=bsl, drops=c("bw","score"), turns=c("hr","mgs","temp"),
k=4, customCol= c("red","green","blue","magenta"))
# Test model --------------------------------------------------------------
animal       <- 1
RELSA        <- relsa(set=pre, bsl, a=animal, drop=c("bw","score","mgs30","mgs180"),
turnvars=c("hr","mgs","temp"), relsaNA=NA)
animal       <- 1
RELSA        <- relsa(set=pre, bsl, a=animal, drop=c("bw","score","mgs30","mgs180"),
turnvars=turnvars, relsaNA=NA)
plotset      <- relsa_plot(pre, RELSA, levels=levels, animal=animal, plotRELSA=TRUE, myYlim=c(0,1.4))
animal       <- 1
RELSA        <- relsa(set=pre, bsl, a=animal, drop=c("bw","score","mgs30","mgs180"),
turnvars=turnvars, relsaNA=NA)
plotset      <- relsa_plot(pre, RELSA, levels=levels, animal=animal, plotRELSA=TRUE, myYlim=c(0,2))
# Test model --------------------------------------------------------------
animal       <- 1
RELSA        <- relsa(set=pre, bsl, a=animal, drop=c("bw","score","mgs30","mgs180"),
turnvars=turnvars, relsaNA=NA)
plotset      <- relsa_plot(pre, RELSA, levels=levels, animal=animal, plotRELSA=TRUE, myYlim=c(0,1))
library(RELSA)
RELSA
library(RELSA)
animal       <- 1
RELSA        <- relsa(set=pre, bsl, a=animal,
drop=c("bw","score","mgs30","mgs180"), turnvars=turnvars)
head(RELSA$relsa$rms)
library(RELSA)
# Build modell ------------------------------------------------------------
raw          <- postop
vars         <- c("bwc", "bur2h", "burON", "hr", "hrv", "temp", "act", "mgs")
turnvars     <- c("hr", "mgs", "temp" )
pre          <- relsa_norm(cbind(raw[,1:4], raw[,vars]),
normthese = c("bur2h", "burON", "hr", "hrv", "temp", "act", "mgs"), ontime = 1)
bsl          <- relsa_baselines(dataset = pre, bslday = -1, variables = vars, turnvars = turnvars)
levels       <- relsa_levels(pre, bsl = bsl, drops = c("bw", "score"), turns = c("hr", "mgs", "temp"),
k = 4, customCol = c("red", "green", "blue", "magenta"))
# Test model --------------------------------------------------------------
animal       <- 1
RELSA        <- relsa(set = pre, bsl, a = animal,
drop=c("bw", "score", "mgs30", "mgs180"), turnvars = turnvars)
head(RELSA$relsa$rms)
library(RELSA)
system("R CMD Rd2pdf RELSA")
getwd()
system("R CMD Rd2pdf RELSA --no-clean")
ack <- "RELSA"
path <- find.package(pack)
pack <- "RELSA"
path <- find.package(pack)
path
system(paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path)))
system("R CMD Rd2pdf RELSA")
pack <- "RELSA"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path)))
system("R CMD Rd2pdf relsa.Rd ")
pack <- "relsa.Rd"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path)))
system("R CMD Rd2pdf relsa_load.Rd ")
pack <- "relsa.Rd"
path <- find.package(pack)
system("R CMD Rd2pdf relsa_load.Rd")
system("R CMD Rd2pdf C:/MHH Bleich/Papers/PostOPPaper/Relsa package/RELSA/man/relsa_load.Rd")
paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path))
system("R CMD Rd2pdf 'C:/MHH Bleich/Papers/PostOPPaper/Relsa package/RELSA/man/relsa_load.Rd'")
pack <- "RELSA"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path)))
system("R CMD Rd2pdf RELSA")
system("R CMD Rd2pdf RELSA")
pack <- "RELSA"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path)))
shQuote(texi2dvi)
devtools::build_manual()
fun <- "relsa"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "postop"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "relsa_baselines"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "relsa_levels"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "relsa_load"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "relsa_norm"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "relsa_plot"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "relsa"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "relsa_R"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "relsa"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
fun <- "relsa"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
library(RELSA)
fun <- "relsa_main"
help(fun, package = "RELSA", help_type = "pdf")
system(paste0("open ",  fun, ".pdf"))
library(RELSA)
pack <- "RELSA"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path)))
library(RELSA)
getwd()
library(RELSA)
library(RELSA)
library(RELSA)
library(RELSA)
library(RELSA)
devtools::check()
install.packages("qpdf")
devtools::check()
tinytex::tlmgr_install(readLines('https://github.com/yihui/tinytex/raw/master/tools/pkgs-yihui.txt'))
library(RELSA)
library(RELSA)
getwd()
pkgbuild::build()
